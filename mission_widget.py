# coding:utf-8
'''
任务控件(Mission Widget相关)

1.先是建立了飞行任务的框Add_Fly_Mission_Dialog，设置了飞行的框里所有值的获取方式，以及当任务发生变化的时候，任务名称、应用范围、载荷以载荷参数的变化，以及平台载荷发生变化后相应的属性值跟着变化
2.框中所有值的获取根据上面设定的获取方式
3.先是定义了创建区域添加框的类Add_Area_Dialog，以及所有值的获取方式，多边形的绘制和坐标的获取（gis_canvas.py）
4.定义了创建飞行区域列表的类函数Mission_Widget_Item，添加列表有添加飞行任务和删除观测区域，添加飞行任务的时候如何与飞行任务的框进行联系，
5.实际任务的添加Mission_Widget，点击右键的添加，有和在右击后弹出区域添加框
6.代码的顺序把实际操作的过程反过来了

'''
import PyQt5, functools
import mission_manager, gis_canvas
from mission_planning import camera, aerocraft, preload_missions, mission_planning
import mission_simulate
import geo_polygons
#abandoned
class Add_Fly_Mission_Dialog(PyQt5.QtWidgets.QDialog):#添加飞行任务的框
    def __init__(self, parent, rc, area_name, area_object):
        PyQt5.QtWidgets.QDialog.__init__(self, parent)
        PyQt5.uic.loadUi('add_fly_mission.ui', self)
        self.rc = rc
        self.area_name=area_name
        self.area_object = area_object#需要是区域才行
        self.init_data()
        self.camera_attribute_label.setWordWrap(True)#自动换行
        self.aerocraft_attribute_label.setWordWrap(True)#自动换行
        self.preload_missions_listwidget.itemSelectionChanged.connect(
            self.preload_mission_selected_changed)#预设任务里的列表选择项发生变化
        self.camera_cbox.currentIndexChanged.connect(
            self.camera_or_aercraft_selected_changed)#currentIndex()获取当前comBox的索引，是int类型的值，载荷选择发生变化
        self.aerocraft_cbox.currentIndexChanged.connect(
            self.camera_or_aercraft_selected_changed)#平台选择发生变化
    
    def preload_mission_selected_changed(self):
        selected_mission_name = self.preload_missions_listwidget.selectedItems()[0].text()#初始化
        mission_attribute = self.preload_missions[selected_mission_name]#任务的字典
        self.mission_name_textedit.setText(selected_mission_name)#
        self.application_textedit.setText(mission_attribute['application'])
        self.camera_cbox.setCurrentText(mission_attribute['cameras'])
        self.aerocraft_cbox.setCurrentText(mission_attribute['aerocraft'])

        self.ground_resolution_m_textedit.setText(str(mission_attribute['ground_resolution_m']))
        self.forward_overlap_textedit.setText(str(mission_attribute['forward_overlap']))
        self.sideway_overlap_textedit.setText(str(mission_attribute['sideway_overlap']))
        self.aerocraft_num.setText(str(mission_attribute['aerocraft_num']))
        self.fly_direction.setText(str(mission_attribute['fly_direction']))
    
    def camera_or_aercraft_selected_changed(self):
        self.selected_camera = self.camera_cbox.currentText()#currentText()获取当前cbox的文本，是QString类型
        self.camera_attribute_label.setText(str(self.preload_cameras[self.selected_camera]))#平台发生变化，平台参数也会发生变化
        self.selected_aerocraft = self.aerocraft_cbox.currentText()
        self.aerocraft_attribute_label.setText(str(self.preload_aerocrafts[self.selected_aerocraft]))#载荷发生变化，参数label也发生变化
    #currentData(int role = Qt::UserRole)获取当前comBox绑定的数据，是QVariant类型。
    def preload_data(self):#几个字典的调用
        self.preload_missions = preload_missions.missions
        self.preload_cameras = camera.cameras
        self.preload_aerocrafts = aerocraft.aerocrafts
    
    def init_data(self):#在预设任务区域和平台载荷的下拉框里添上目前有的任务、平台和载荷
        self.preload_data()
        for mission_name in self.preload_missions:
            self.preload_missions_listwidget.addItem(mission_name)#预设任务区域添加
        for camera_name in self.preload_cameras:
            self.camera_cbox.addItem(camera_name)
        for aerocraft_name in self.preload_aerocrafts:
            self.aerocraft_cbox.addItem(aerocraft_name)#在QComboBox的最后添加一项
        self.preload_missions_listwidget.setCurrentRow(0)
        self.preload_mission_selected_changed()
        self.camera_or_aercraft_selected_changed()
    
    def clear_rubber_band(self):
        if 'polygon_rubber_band' in dir(self):
            self.polygon_rubber_band.hide()
            del(self.polygon_rubber_band)

    def done(self, r):
        PyQt5.QtWidgets.QDialog.done(self, r)
    
    def accept(self):
        self.params = {
            'area_name':self.area_name,
            'area': self.area_object.polygon,
            'mission_name': self.mission_name_textedit.toPlainText(),
            'application': self.application_textedit.toPlainText(),
            'cameras': self.camera_cbox.currentText(),
            'aerocraft': self.aerocraft_cbox.currentText(),
            'fly_direction': self.fly_direction.toPlainText(),
            'ground_resolution_m': self.ground_resolution_m_textedit.toPlainText(),
            'sideway_overlap': self.sideway_overlap_textedit.toPlainText(),
            'forward_overlap': self.forward_overlap_textedit.toPlainText(),
            'aerocraft_num': self.aerocraft_num.toPlainText(),
        }
        succ, ret = mission_planning.mission_planning(
            area_name=self.params['area_name'],
            area_points_list=self.params['area'],
            mission_name=self.params['mission_name'],
            aerocraft=self.params['aerocraft'],
            camera=self.params['cameras'],
            ground_resolution_m=self.params['ground_resolution_m'],
            forward_overlap=self.params['forward_overlap'],
            sideway_overlap=self.params['sideway_overlap'],
            fly_direction=self.params['fly_direction'],
            application=self.params['application'],
            aerocraft_num=self.params['aerocraft_num'],
            )
        if not succ:
            PyQt5.QtWidgets.QMessageBox.critical(self, '错误', str(ret))
        else:
            mission_attribute = ret
            succ, ret = self.area_object.create_fly_mission(mission_attribute)
            if not succ:
                PyQt5.QtWidgets.QMessageBox.critical(self, '错误', str(ret))
            self.close()

        
class Add_Area_Dialog(PyQt5.QtWidgets.QDialog):
    def __init__(self, parent, rc):
        PyQt5.QtWidgets.QDialog.__init__(self, parent)
        PyQt5.uic.loadUi('add_area_dialog.ui', self)
        self.rc = rc
        self.reDraw.clicked.connect(self.start_draw)#QPushButton的名字是reDraw
        self.polygon = None
        self.coors_label.setWordWrap(True)#坐标自动换行
        self.start_draw()
        self.pku.clicked.connect(functools.partial(self.use_preload_polygon, 'pku'))
        self.aoxiang.clicked.connect(functools.partial(self.use_preload_polygon, 'aoxiang'))
        self.aoxiang_big.clicked.connect(functools.partial(self.use_preload_polygon, 'aoxiang_big'))
        self.aoxiang_huge.clicked.connect(functools.partial(self.use_preload_polygon, 'aoxiang_huge'))
        self.aoxiang_round.clicked.connect(functools.partial(self.use_preload_polygon, 'aoxiang_round'))
    
    def start_draw(self):
        self.clear_rubber_band()#
        self.rc.gis_canvas.start_draw_polygon(self.draw_finished)
    
    def draw_finished(self, polygon, epsgcode):
        polygon = gis_canvas.trans_points_list(epsgcode, 'EPSG:4326', polygon)
        self.polygon = polygon
        self.coors_label.setText(str(self.polygon))
        self.rc.gis_canvas.stop_draw_polygon()
        self.polygon_rubber_band = self.rc.gis_canvas.show_temp_polygon_from_points_list(
            self.polygon, 'EPSG:4326', edgecolor=PyQt5.QtCore.Qt.black, fillcolor=PyQt5.QtCore.Qt.gray)
    
    def clear_rubber_band(self):
        if 'polygon_rubber_band' in dir(self):
            self.polygon_rubber_band.hide()
            del(self.polygon_rubber_band)

    def use_preload_polygon(self, name_):
        if name_ == 'pku':
            area_polygon = geo_polygons.Polygons.pku['vertex']
        elif name_ == 'aoxiang':
            area_polygon = geo_polygons.Polygons.aoxiang['vertex']
            self.rc.main_window.gis_canvas.zoom_to_polygon(area_polygon, 'EPSG:4326')
        elif name_ == 'aoxiang_big':
            area_polygon = geo_polygons.Polygons.aoxiang_big['vertex']
            self.rc.main_window.gis_canvas.zoom_to_polygon(area_polygon, 'EPSG:4326')
        elif name_ == 'aoxiang_huge':
            area_polygon = geo_polygons.Polygons.aoxiang_huge['vertex']
            self.rc.main_window.gis_canvas.zoom_to_polygon(area_polygon, 'EPSG:4326')
        elif name_ == 'aoxiang_round':
            area_polygon = geo_polygons.Polygons.aoxiang_fly_round['vertex']
            self.rc.main_window.gis_canvas.zoom_to_polygon(area_polygon, 'EPSG:4326')
        else:
            raise '无法识别的多边形 %s' % name_
        self.add_area(area_polygon)

    def done(self, r):
        self.clear_rubber_band()
        self.rc.gis_canvas.stop_draw_polygon()
        PyQt5.QtWidgets.QDialog.done(self, r)
    
    def rejected(self, r):
        self.clear_rubber_band()
        self.rc.gis_canvas.stop_draw_polygon()
        PyQt5.QtWidgets.QDialog.rejected(self, r)
    
    def accept(self):#添加区域的框
        self.rc.gis_canvas.stop_draw_polygon()
        if self.polygon is None:
            PyQt5.QtWidgets.QMessageBox.critical(self, 'ERROR', 'ERROR: please draw a polygon')
        else:
            self.add_area(self.polygon)
    
    def add_area(self, area_polygon):
        area_name = self.area_name_textedit.toPlainText()#获取控件的信息：区域名字
        success, ret = self.rc.mission_manager.add_area(area_name, area_polygon)
        if not success:
            PyQt5.QtWidgets.QMessageBox.critical(self, 'ERROR', 'ERROR: %s' % ret)
        else:
            self.close()

class Mission_Widget_Item(PyQt5.QtWidgets.QTreeWidgetItem):#飞行区域的列表的创建
    def __init__(self, parent, rc, type_, area_name, binding_object):
        PyQt5.QtWidgets.QTreeWidgetItem.__init__(self, parent)
        self.parent = parent
        self.rc = rc
        self.area_name=area_name
        self.type = type_
        self.binding_object = binding_object
        self.setText(0, binding_object.name)
        self.set_checked(True)
        self.fly_location=[(1,117.403832,39.557225,-3),(1,117.403779,39.55733,-3),(1,117.403745,39.557463,-3),(1,117.403679,39.557596,-2),(1,117.40358,39.55774,-1),(1,117.403478,39.557888,0),(1,117.403369,39.558039,4),(1,117.403264,39.558187,8),(1,117.403183,39.558342,12),(1,117.40315,39.558501,16),(1,117.403167,39.558661,20),(1,117.403242,39.558822,23),(1,117.403367,39.558977,25),(1,117.40353,39.559125,27),(1,117.403706,39.559266,30),(1,117.40389,39.5594,33),(1,117.404074,39.559533,36),(1,117.404242,39.559674,40),(1,117.404359,39.559824,43),(1,117.404405,39.559987,45),(1,117.404374,39.56015,45),(1,117.404279,39.560312,41),(1,117.404111,39.560462,36),(1,117.403881,39.560586,33),(1,117.403606,39.560674,33),(1,117.403318,39.560724,34),(1,117.403012,39.560734,36),(1,117.402717,39.560705,39),(1,117.402428,39.560636,43),(1,117.402169,39.56053,47),(1,117.401944,39.560383,51),(1,117.401771,39.560198,55),(1,117.40166,39.559972,58),(1,117.401608,39.559731,61),(1,117.401544,39.559481,59),(1,117.401443,39.559239,58),(1,117.401367,39.55899,60),(1,117.401358,39.558723,62),(1,117.401444,39.558454,62),(1,117.401644,39.558212,62),(1,117.401909,39.558023,64),(1,117.402242,39.557887,66),(1,117.402589,39.55782,67),(1,117.40294,39.557821,70),(1,117.403284,39.557865,73),(1,117.403623,39.557916,76),(1,117.403959,39.557959,80),(1,117.404299,39.557998,84),(1,117.40464,39.558023,87),(1,117.404983,39.558016,90),(1,117.405321,39.55796,93),(1,117.405646,39.557866,96),(1,117.405966,39.557757,99),(1,117.406276,39.557643,102),(1,117.406582,39.557513,106),(1,117.406865,39.557356,109),(1,117.407113,39.557161,111),(1,117.407289,39.556926,112),(1,117.407362,39.556666,114),(1,117.407308,39.556419,116),(1,117.40716,39.556225,120),(1,117.406954,39.556117,123),(1,117.406728,39.556086,124),(1,117.406515,39.55613,126),(1,117.406321,39.556216,127),(1,117.406131,39.55632,128),(1,117.405935,39.556431,130),(1,117.405734,39.556554,131),(1,117.405562,39.556698,133),(1,117.405411,39.556863,136),(1,117.405282,39.557043,136),(1,117.405176,39.557244,136),(1,117.405086,39.557448,137),(1,117.404989,39.557651,140),(1,117.404893,39.557836,143),(1,117.404789,39.558019,146),(1,117.404682,39.558186,150),(1,117.404568,39.558342,154),(1,117.40445,39.558485,158),(1,117.404315,39.558619,161),(1,117.404161,39.558737,163),(1,117.403984,39.55885,164),(1,117.403802,39.558956,165),(1,117.403608,39.559064,166),(1,117.403414,39.559173,167),(1,117.403234,39.559292,171),(1,117.403109,39.559433,175),(1,117.403078,39.559603,179),(1,117.403153,39.559783,182),(1,117.40332,39.55995,183),(1,117.403554,39.560082,183),(1,117.403851,39.560167,184),(1,117.404202,39.560186,184),(1,117.404568,39.560125,184),(1,117.404923,39.559985,184),(1,117.405227,39.559783,186),(1,117.405476,39.559528,188),(1,117.405669,39.55926,192),(1,117.405848,39.55898,196),(1,117.406017,39.558706,200),(1,117.406185,39.55843,203),(1,117.406344,39.55816,205),(1,117.406482,39.557876,204),(1,117.40658,39.557578,204),(1,117.406635,39.557264,205),(1,117.406646,39.556967,205),(1,117.406601,39.556664,205),(1,117.406483,39.556382,203),(1,117.406283,39.556134,203),(1,117.406037,39.555945,204),(1,117.405745,39.555805,205),(1,117.405439,39.555721,205),(1,117.405121,39.555702,206),(1,117.404817,39.555737,205),(1,117.404534,39.555834,203),(1,117.404317,39.555987,203),(1,117.40416,39.556181,202),(1,117.404076,39.556402,201),(1,117.404046,39.556633,202),(1,117.404024,39.556859,202),(1,117.403981,39.557084,203),(1,117.403908,39.557298,203),(1,117.4038,39.557499,204),(1,117.403658,39.557686,204),(1,117.403496,39.557855,203),(1,117.40335,39.558036,203),(1,117.403258,39.558237,202),(1,117.403219,39.558456,202),(1,117.403221,39.558679,202),(1,117.403251,39.558903,201),(1,117.403328,39.559124,202),(1,117.403445,39.559338,202),(1,117.403582,39.559545,202),(1,117.403736,39.559749,202),(1,117.403908,39.559943,202),(1,117.404117,39.560123,202),(1,117.404373,39.560279,202),(1,117.404654,39.56041,202),(1,117.40495,39.560524,202),(1,117.405252,39.560621,203),(1,117.405573,39.560702,203),(1,117.405916,39.560745,205),(1,117.406275,39.560741,206),(1,117.406631,39.560704,206),(1,117.406995,39.560642,206),(1,117.407355,39.560553,206),(1,117.407709,39.560425,204),(1,117.408026,39.560253,204),(1,117.408303,39.560038,204),(1,117.408533,39.559805,204),(1,117.408727,39.559564,204),(1,117.408894,39.559301,203),(1,117.40902,39.559017,203),(1,117.409102,39.558743,203),(1,117.409136,39.558458,202),(1,117.409122,39.558183,201),(1,117.409065,39.557915,201),(1,117.408971,39.557667,201),(1,117.408841,39.557434,202),(1,117.408684,39.557223,203),(1,117.408497,39.557027,204),(1,117.408299,39.556849,203),(1,117.408081,39.556693,203),(1,117.407855,39.556574,203),(1,117.407612,39.556475,203),(1,117.407371,39.556393,203),(1,117.407123,39.556327,203),(1,117.406877,39.556279,203),(1,117.406629,39.556255,203),(1,117.406381,39.556242,201),(1,117.406136,39.556236,200),(1,117.405894,39.556239,201),(1,117.405659,39.556256,201),(1,117.405432,39.556294,201),(1,117.405219,39.55635,202),(1,117.405018,39.55642,202),(1,117.404817,39.556495,202),(1,117.404622,39.556575,202),(1,117.404437,39.556667,201),(1,117.404268,39.556776,202),(1,117.404116,39.556892,202),(1,117.403959,39.557015,203),(1,117.403788,39.557125,204),(1,117.40359,39.557211,205),(1,117.403381,39.55728,205),(1,117.403171,39.557355,205),(1,117.402977,39.557442,204),(1,117.402782,39.557539,203),(1,117.402587,39.557634,202),(1,117.402392,39.557726,201),(1,117.402198,39.557816,202),(1,117.401999,39.557904,203),(1,117.401806,39.557991,203),(1,117.401611,39.558086,204),(1,117.401412,39.558184,205),(1,117.40121,39.558281,205),(1,117.401009,39.55838,205),(1,117.400811,39.558481,205),(1,117.400607,39.558581,206),(1,117.400402,39.558679,206),(1,117.400194,39.558779,205),(1,117.399993,39.558879,204),(1,117.399787,39.558979,205),(1,117.399586,39.559077,205),(1,117.399375,39.55918,205),(1,117.399169,39.559277,205),(1,117.398953,39.559376,206),(1,117.398739,39.559475,207),(1,117.398527,39.559577,207),(1,117.398312,39.559686,207),(1,117.39811,39.559802,207),(1,117.397912,39.559929,207),(1,117.397719,39.560064,207),(1,117.397524,39.560202,207),(1,117.397333,39.560345,208),(1,117.397142,39.560495,208),(1,117.39695,39.560641,208),(1,117.396731,39.560775,208),(1,117.396512,39.560911,209),(1,117.396325,39.561073,208),(1,117.396194,39.561269,208),(1,117.396133,39.561499,208),(1,117.396146,39.561736,208),(1,117.396222,39.561971,207),(1,117.396375,39.562193,207),(1,117.396601,39.562384,206),(1,117.396897,39.562538,207),(1,117.397214,39.562655,206),(1,117.397552,39.562755,205),(1,117.397877,39.562845,204),(1,117.39791,39.562854,203),(1,117.398554,39.563006,201),(1,117.398884,39.563071,200),(1,117.399212,39.563128,200),(1,117.399537,39.563181,199),(1,117.399853,39.563237,198),(1,117.400129,39.563286,198),(1,117.400467,39.563348,199),(1,117.400759,39.563406,199),(1,117.401047,39.563465,199),(1,117.401324,39.563525,200),(1,117.401602,39.563586,200),(1,117.401889,39.563644,200),(1,117.402165,39.563701,201),(1,117.402363,39.563744,202),(1,117.402729,39.563823,202),(1,117.403015,39.563886,202),(1,117.403298,39.563949,203),(1,117.403587,39.564012,204),(1,117.403878,39.564069,205),(1,117.404184,39.564123,206),(1,117.404499,39.564174,206),(1,117.404596,39.56419,206),(1,117.405141,39.564286,206),(1,117.405468,39.564346,206),(1,117.405809,39.564405,206),(1,117.406151,39.564462,207),(1,117.406498,39.564518,208),(1,117.406835,39.564575,208),(1,117.407187,39.564636,208),(1,117.407534,39.564697,207),(1,117.407874,39.564756,207),(1,117.408221,39.564817,206),(1,117.408554,39.564879,206),(1,117.408896,39.564947,206),(1,117.409094,39.564988,206),(1,117.409561,39.565091,205),(1,117.409897,39.565159,204),(1,117.410225,39.56522,204),(1,117.410565,39.565284,203),(1,117.41089,39.56534,202),(1,117.411224,39.565396,202),(1,117.411324,39.565414,202),(1,117.411866,39.565515,204),(1,117.412186,39.565576,204),(1,117.412503,39.565638,203),(1,117.412825,39.565708,203),(1,117.41314,39.565772,203),(1,117.41348,39.565805,204),(1,117.413827,39.565783,203),(1,117.414162,39.565698,204),(1,117.414463,39.565557,205),(1,117.414714,39.565373,206),(1,117.414923,39.565149,205),(1,117.415053,39.564906,204),(1,117.415096,39.564649,205),(1,117.41506,39.564407,205),(1,117.414952,39.564186,206),(1,117.414782,39.564006,206),(1,117.414571,39.563874,206),(1,117.41433,39.563804,207),(1,117.414084,39.563801,207),(1,117.413852,39.563858,207),(1,117.413663,39.563976,207),(1,117.41338,39.564311,207),(1,117.413256,39.564489,206),(1,117.413114,39.564662,206),(1,117.413048,39.564724,205),(1,117.412719,39.564915,205),(1,117.412477,39.56498,204),(1,117.412223,39.565011,203),(1,117.411958,39.565019,202),(1,117.411705,39.564993,202),(1,117.411447,39.564917,201),(1,117.411206,39.564828,203),(1,117.410956,39.564757,204),(1,117.410704,39.564717,205),(1,117.41068,39.564714,205),(1,117.410185,39.564656,206),(1,117.409918,39.564602,206),(1,117.409653,39.564539,206),(1,117.409384,39.564479,207),(1,117.409114,39.56443,207),(1,117.408837,39.564385,207),(1,117.408569,39.564337,206),(1,117.408431,39.564308,205),(1,117.408013,39.564209,205),(1,117.40774,39.564147,205),(1,117.407464,39.56409,205),(1,117.407195,39.564043,205),(1,117.406921,39.563999,204),(1,117.406646,39.56395,204),(1,117.406371,39.563888,204),(1,117.406207,39.563849,204),(1,117.405831,39.563771,203),(1,117.405561,39.563725,202),(1,117.405297,39.563683,202),(1,117.405029,39.563635,203),(1,117.404767,39.563577,204),(1,117.404512,39.563519,204),(1,117.404253,39.563466,203),(1,117.403996,39.563421,203),(1,117.403975,39.563418,203),(1,117.403481,39.56333,203),(1,117.403224,39.563281,203),(1,117.402971,39.563234,203),(1,117.402729,39.563188,203),(1,117.40248,39.563139,203),(1,117.402239,39.563088,204),(1,117.40199,39.563036,205),(1,117.40174,39.562984,206),(1,117.4015,39.562934,206),(1,117.401247,39.562884,205),(1,117.401001,39.562839,204),(1,117.400754,39.562791,203),(1,117.400503,39.562739,203),(1,117.40026,39.562689,203),(1,117.400011,39.56264,203),(1,117.399773,39.562595,203),(1,117.399528,39.562547,203),(1,117.399503,39.562542,203),(1,117.399042,39.562458,206),(1,117.398778,39.562415,207),(1,117.398514,39.562368,207),(1,117.398239,39.56232,207),(1,117.397959,39.562268,208),(1,117.397678,39.562219,209),(1,117.39739,39.56219,209),(1,117.397098,39.562144,209),(1,117.396811,39.562053,209),(1,117.39655,39.561915,208),(1,117.396337,39.561733,206),(1,117.396179,39.561498,206),(1,117.396089,39.561242,205),(1,117.396066,39.56097,205),(1,117.396117,39.560696,204),(1,117.396232,39.560441,203),(1,117.396424,39.560198,202),(1,117.396674,39.56,202),(1,117.396971,39.55985,202),(1,117.397307,39.559753,203),(1,117.397653,39.559714,203),(1,117.397992,39.559741,205),(1,117.398295,39.559816,205),(1,117.39856,39.559944,206),(1,117.398753,39.560099,206),(1,117.3989,39.560318,207),(1,117.39897,39.560534,207),(1,117.399005,39.560751,207),(1,117.399037,39.560977,207),(1,117.399076,39.561214,206),(1,117.399142,39.561448,206),(1,117.39926,39.561684,206),(1,117.399436,39.561905,206),(1,117.399659,39.562101,205),(1,117.399932,39.562262,204),(1,117.400239,39.562374,204),(1,117.400372,39.562403,204),(1,117.400931,39.56244,203),(1,117.401277,39.562415,203),(1,117.401628,39.562394,203),(1,117.401967,39.562409,202),(1,117.402291,39.562455,202),(1,117.402605,39.562519,201),(1,117.402698,39.562539,201),(1,117.403221,39.562651,200),(1,117.403543,39.562705,201),(1,117.403858,39.562753,202),(1,117.404184,39.562808,203),(1,117.404498,39.562874,204),(1,117.404807,39.562943,205),(1,117.404931,39.562969,205),(1,117.405442,39.563052,205),(1,117.405779,39.563102,205),(1,117.40611,39.563159,205),(1,117.406431,39.563218,205),(1,117.40676,39.563278,205),(1,117.407077,39.563341,204),(1,117.407169,39.563359,204),(1,117.407714,39.563467,204),(1,117.40803,39.563523,203),(1,117.408351,39.563576,204),(1,117.408666,39.56363,204),(1,117.408982,39.563687,205),(1,117.409302,39.563743,205),(1,117.409391,39.563759,205),(1,117.409931,39.563853,206),(1,117.410261,39.563915,206),(1,117.410574,39.563976,207),(1,117.410907,39.564039,207),(1,117.411237,39.564104,207),(1,117.411565,39.564166,206),(1,117.411631,39.564178,206),(1,117.41223,39.564273,206),(1,117.412565,39.56433,206),(1,117.412899,39.564388,205),(1,117.413226,39.564446,205),(1,117.413563,39.564503,205),(1,117.413897,39.564536,204),(1,117.414257,39.56452,204),(1,117.414613,39.564448,204),(1,117.414936,39.564322,204),(1,117.41523,39.56414,205),(1,117.415472,39.563915,205),(1,117.415643,39.563669,206),(1,117.415757,39.563394,206),(1,117.415798,39.563117,206),(1,117.415763,39.562847,205),(1,117.415651,39.562599,205),(1,117.415477,39.562391,204),(1,117.415259,39.562236,204),(1,117.415006,39.562138,205),(1,117.414753,39.5621,205),(1,117.414505,39.562126,204),(1,117.414277,39.562196,204),(1,117.41407,39.562288,204),(1,117.41386,39.562383,204),(1,117.413642,39.562472,203),(1,117.41342,39.562551,203),(1,117.413191,39.562629,203),(1,117.412971,39.562703,204),(1,117.412746,39.562775,205),(1,117.412512,39.562836,205),(1,117.412265,39.562872,205),(1,117.412004,39.562869,206),(1,117.411736,39.562812,206),(1,117.411483,39.562718,206),(1,117.411227,39.562591,206),(1,117.410997,39.562435,206),(1,117.410783,39.562251,206),(1,117.410571,39.562058,206),(1,117.41036,39.561878,206),(1,117.410137,39.561701,205),(1,117.409911,39.56153,205),(1,117.409691,39.561365,205),(1,117.409472,39.561191,204),(1,117.409262,39.561016,204),(1,117.409062,39.560847,203),(1,117.408853,39.560676,203),(1,117.408645,39.560509,203),(1,117.408455,39.560327,202),(1,117.408294,39.560124,202),(1,117.408167,39.559911,203),(1,117.408059,39.559688,204),(1,117.407958,39.559457,204),(1,117.407861,39.559236,203),(1,117.407757,39.559008,203),(1,117.407646,39.558783,202),(1,117.407536,39.558561,201),(1,117.407445,39.558329,201),(1,117.40736,39.5581,200),(1,117.407288,39.557876,201),(1,117.407263,39.55764,203),(1,117.40728,39.557401,205),(1,117.407325,39.55716,207),(1,117.407376,39.556909,207),(1,117.407398,39.55666,207),(1,117.407375,39.55641,207),(1,117.407298,39.556162,207),(1,117.407185,39.555934,208),(1,117.407054,39.555701,208),(1,117.40691,39.555473,208),(1,117.406749,39.555264,208),(1,117.40656,39.555071,207),(1,117.406343,39.554897,207),(1,117.406112,39.554747,207),(1,117.405867,39.554608,208),(1,117.405617,39.554488,208),(1,117.405368,39.55439,207),(1,117.405101,39.554314,206),(1,117.404841,39.554258,205),(1,117.404584,39.55421,205),(1,117.404322,39.554172,204),(1,117.404068,39.554157,204),(1,117.403825,39.554167,203),(1,117.403587,39.55419,202),(1,117.403356,39.554211,201),(1,117.403127,39.554234,201),(1,117.402905,39.554268,200),(1,117.402706,39.554327,200),(1,117.402521,39.554404,200),(1,117.40234,39.554485,200),(1,117.402157,39.554558,200),(1,117.401966,39.554635,201),(1,117.401797,39.554725,202),(1,117.401645,39.554833,202),(1,117.401501,39.554956,202),(1,117.401366,39.555083,203),(1,117.401227,39.555215,203),(1,117.401078,39.555351,203),(1,117.400934,39.55549,203),(1,117.400815,39.555646,205),(1,117.400722,39.555823,206),(1,117.400651,39.556006,207),(1,117.400595,39.5562,209),(1,117.400549,39.556406,208),(1,117.400517,39.556618,208),(1,117.400506,39.556842,209),(1,117.400517,39.557065,209),(1,117.40055,39.557283,208),(1,117.400612,39.557511,208),(1,117.400703,39.557737,207),(1,117.400819,39.557959,207),(1,117.400964,39.558181,206),(1,117.401134,39.558396,207),(1,117.401331,39.558597,207),(1,117.401556,39.558785,206),(1,117.401804,39.558953,205),(1,117.402065,39.559095,204),(1,117.402359,39.559224,203),(1,117.402666,39.559332,203),(1,117.402976,39.559413,204),(1,117.403309,39.559474,204),(1,117.403656,39.559509,204),(1,117.403999,39.559519,204),(1,117.404352,39.559505,204),(1,117.404702,39.559463,205),(1,117.405044,39.559395,205),(1,117.405382,39.559297,205),(1,117.405705,39.559177,204),(1,117.406019,39.55903,204),(1,117.40631,39.558851,204),(1,117.406568,39.558655,204),(1,117.40679,39.558441,205),(1,117.40698,39.558205,206),(1,117.407136,39.557963,205),(1,117.407262,39.55771,205),(1,117.407357,39.557445,206),(1,117.407421,39.557177,206),(1,117.407445,39.556916,207),(1,117.407439,39.556647,208),(1,117.407407,39.556389,207),(1,117.407345,39.556138,207),(1,117.40725,39.555888,206),(1,117.407126,39.555659,206),(1,117.406969,39.55545,206),(1,117.406791,39.555257,205),(1,117.406601,39.555076,204),(1,117.406398,39.554909,203),(1,117.406183,39.554759,203),(1,117.405965,39.554628,203),(1,117.405736,39.554512,201),(1,117.405498,39.55441,201),(1,117.405273,39.554327,201),(1,117.40504,39.55426,202),(1,117.404806,39.554215,203),(1,117.404577,39.554182,204),(1,117.404344,39.554156,205),(1,117.404096,39.554138,204),(1,117.403851,39.554132,204),(1,117.403606,39.554144,203),(1,117.403359,39.554168,204),(1,117.40312,39.554203,204),(1,117.402894,39.554252,203),(1,117.402671,39.55432,202),(1,117.402456,39.5544,202),(1,117.402249,39.554488,203),(1,117.40204,39.554582,203),(1,117.401841,39.554677,203),(1,117.401647,39.554779,204),(1,117.401463,39.554902,205),(1,117.401294,39.555041,205),(1,117.401144,39.555191,205),(1,117.401002,39.555363,204),(1,117.400874,39.555536,203),(1,117.40076,39.555714,202),(1,117.400663,39.555905,202),(1,117.400593,39.556095,203),(1,117.400541,39.556293,204),(1,117.400495,39.556493,205),(1,117.400457,39.556696,205),(1,117.400442,39.556905,206),(1,117.400458,39.557124,207),(1,117.400502,39.557343,208),(1,117.400569,39.557559,208),(1,117.400667,39.55778,208),(1,117.40079,39.557993,207),(1,117.40094,39.5582,206),(1,117.401116,39.558402,206),(1,117.401312,39.558589,205),(1,117.401526,39.558761,205),(1,117.401767,39.558926,205),(1,117.402026,39.55907,204),(1,117.402296,39.559197,204),(1,117.402596,39.559308,204),(1,117.402904,39.559398,204),(1,117.403224,39.559466,205),(1,117.403562,39.559508,206),(1,117.403907,39.559524,206),(1,117.404249,39.559514,206),(1,117.404608,39.559474,206),(1,117.404962,39.559405,206),(1,117.405301,39.55931,207),(1,117.405646,39.559184,207),(1,117.405975,39.559031,208),(1,117.406274,39.558856,208),(1,117.406552,39.55865,208),(1,117.406793,39.558419,207),(1,117.406996,39.558178,207),(1,117.407167,39.557923,207),(1,117.4073,39.557655,206),(1,117.407396,39.557381,205),(1,117.407449,39.557113,204),(1,117.407465,39.556836,204),(1,117.407448,39.556579,204),(1,117.407403,39.556321,203),(1,117.407325,39.556072,202),(1,117.407222,39.555843,201),(1,117.40709,39.55562,201),(1,117.406934,39.555416,202),(1,117.406772,39.555227,203),(1,117.406595,39.555047,204),(1,117.406398,39.554881,204),(1,117.406186,39.554738,205),(1,117.405966,39.554614,206),(1,117.40573,39.554501,206),(1,117.40549,39.554409,205),(1,117.405252,39.554336,204),(1,117.404995,39.554267,203),(1,117.404747,39.55421,201),(1,117.404508,39.554167,201),(1,117.404263,39.554142,201),(1,117.40402,39.554138,202),(1,117.403784,39.554141,203),(1,117.40355,39.554153,203),(1,117.403314,39.554174,204),(1,117.403093,39.554212,204),(1,117.402874,39.554273,205),(1,117.402653,39.554345,206),(1,117.402433,39.554415,205),(1,117.402208,39.554494,205),(1,117.401991,39.554591,205),(1,117.40178,39.554706,205),(1,117.401582,39.554834,205),(1,117.401387,39.554983,204),(1,117.401205,39.555142,203),(1,117.401049,39.555304,203),(1,117.40091,39.555483,204),(1,117.40079,39.55567,205),(1,117.400686,39.555857,206),(1,117.400591,39.556055,207),(1,117.400518,39.556261,207),(1,117.400476,39.556469,207),(1,117.400458,39.55669,206),(1,117.400459,39.55691,205),(1,117.400481,39.557119,205),(1,117.400527,39.557334,205),(1,117.400599,39.55755,205),(1,117.400691,39.557763,205),(1,117.400799,39.557969,205),(1,117.400933,39.558174,205),(1,117.401088,39.558364,204),(1,117.401272,39.558544,204),(1,117.40148,39.558713,203),(1,117.401705,39.558878,204),(1,117.401942,39.559033,205),(1,117.402229,39.559173,203),(1,117.402565,39.55927,199),(1,117.402948,39.559308,191),(1,117.403367,39.559259,181),(1,117.403781,39.559111,169),(1,117.404157,39.558891,159),(1,117.404508,39.558614,152),(1,117.404831,39.558316,149),(1,117.405133,39.558022,148),(1,117.405411,39.557733,149),(1,117.405667,39.557446,152),(1,117.405896,39.557174,153),(1,117.406116,39.556902,151),(1,117.406336,39.556627,145),(1,117.406561,39.556357,142),(1,117.406808,39.556104,139),(1,117.407079,39.555865,137),(1,117.407346,39.555633,136),(1,117.407591,39.555413,134),(1,117.407812,39.555184,132),(1,117.407981,39.55494,127),(1,117.408084,39.554686,121),(1,117.408101,39.554417,114),(1,117.408013,39.554168,107),(1,117.407853,39.55395,100),(1,117.407652,39.553764,91),(1,117.407398,39.553606,81),(1,117.40711,39.553492,71),(1,117.4068,39.553441,63),(1,117.406466,39.553428,55),(1,117.406135,39.553451,48),(1,117.405841,39.553536,41),(1,117.405629,39.553706,35),(1,117.405486,39.553923,30),(1,117.405391,39.55414,26),(1,117.405314,39.554367,22),(1,117.405234,39.55459,19),(1,117.405139,39.554795,17),(1,117.405029,39.55499,14),(1,117.404917,39.555176,11),(1,117.404814,39.555363,9),(1,117.404729,39.555549,7),(1,117.40465,39.555735,5),(1,117.404566,39.555911,3),(1,117.404475,39.556076,2),(1,117.404372,39.556233,1),(1,117.404261,39.556396,0),(1,117.40416,39.55656,0),(1,117.404091,39.556722,0),(1,117.40402,39.556888,-2),(1,117.403949,39.557044,-2),(1,117.403881,39.557193,-2),(1,117.403823,39.557336,-2),(1,117.403759,39.557469,-3),(1,117.403694,39.557588,-3),(1,117.403615,39.557698,-4),(1,117.403552,39.557802,-4),(1,117.403513,39.557902,-5),(1,117.403499,39.557997,-5),(1,117.403486,39.558073,-5),(1,117.403468,39.55809,-5),(1,117.403467,39.558091,-5),(1,117.403468,39.558093,-5),(1,117.403469,39.558093,-5),(1,117.403469,39.558093,-5),(1,117.40347,39.558093,-5),(1,117.403471,39.558094,-5),(1,117.403471,39.558095,-5),(1,117.403471,39.558095,-5),(1,117.403471,39.558095,-5),(1,117.403472,39.558095,-5),(1,117.403472,39.558095,-5),(1,117.403472,39.558095,-5),(1,117.403472,39.558096,-5),(1,117.403472,39.558096,-5),(1,117.403471,39.558095,-5),]
    
    def get_right_click_menu(self):
        menu = PyQt5.QtWidgets.QMenu(self.rc.main_window)
        if self.type == 'area':
            #menu_item = menu.addAction('添加飞行任务')#向QMeau小控件中添加一个操作按钮，其中包括文字或者涂图标，删除菜单菜单栏额内容用clear（）
            #menu_item.triggered.connect(self.show_add_fly_mission_dialog)
            menu_item = menu.addAction('删除观测区域')
            menu_item.triggered.connect(self.delete)
            menu_item = menu.addAction('转换为字符')
            menu_item.triggered.connect(self.to_text)
            menu_item = menu.addAction('属性')
            menu_item.triggered.connect(self.binding_object.show_attributes)
        elif self.type == 'fly_mission':
            menu_item = menu.addAction('删除飞行任务')
            menu_item.triggered.connect(self.delete)
            menu_item = menu.addAction('模拟')
            menu_item.triggered.connect(self.binding_object.simulate)
            menu_item = menu.addAction('实时模拟')
            menu_item.triggered.connect(self.real_time_simulate)
            menu_item = menu.addAction('发送')
            menu_item.triggered.connect(self.to_text)
            menu_item = menu.addAction('属性')
            menu_item.triggered.connect(self.binding_object.show_attributes)
        return menu
    
    def to_text(self):
        str_ = self.binding_object.to_text()
        dialog = PyQt5.QtWidgets.QMainWindow(self.rc.main_window)
        screenRect = PyQt5.QtWidgets.QApplication.desktop().screenGeometry()
        percentage = 0.8
        dialog.resize(screenRect.width()*percentage, screenRect.height()*percentage)
        dialog.setWindowTitle('转换为字符')
        text_edit = PyQt5.QtWidgets.QPlainTextEdit(dialog)
        dialog.setCentralWidget(text_edit)
        text_edit.setPlainText(str_)
        dialog.show()

    def show_add_fly_mission_dialog(self):#显示添加飞行任务的框，创建框的对象
        dialog = Add_Fly_Mission_Dialog(self.rc.main_window, self.rc, self.area_name, self.binding_object)
        dialog.show()

    def real_time_simulate(self):
        fly_locations=[]
        for i in range(10):
            fly_locations.append([])
        for i in range(len(self.fly_location)):
            fly_locations[int(self.fly_location[i][0])].append((self.fly_location[i][1],self.fly_location[i][2]))
        for i in range(len(fly_locations)):
            if(len(fly_locations[i])!=0):
                one_simulation = mission_simulate.Polyline_Simulation(self.rc, fly_locations[i], self.area_name, 's', False)
                one_simulation.begin()

    def delete(self):
        self.binding_object.delete()
        del self.binding_object
        if self.type == 'area':
            self.parent.takeTopLevelItem(self.parent.indexOfTopLevelItem(self))
        else:
            self.parent.removeChild(self)
        del self

    def on_click(self):#点击后决定是显示还是隐藏
        self.on_checked_changed()
    
    def set_checked(self, is_checked):#判断是否选中了
        if is_checked:
            self.setCheckState(0, PyQt5.QtCore.Qt.Checked)
        else:
            self.setCheckState(0, PyQt5.QtCore.Qt.Unchecked)
        self.on_checked_changed()
    
    def on_checked_changed(self):#如果选中了就显示，没有选中就隐藏
        if self.checkState(0) == PyQt5.QtCore.Qt.Checked:
            self.binding_object.show()
        else:
            self.binding_object.hide()

class Mission_Widget(PyQt5.QtWidgets.QTreeWidget):
    def __init__(self, main_window, rc):
        PyQt5.QtWidgets.QTreeWidget.__init__(self, main_window)
        self.rc = rc
        self.rc.mission_widget = self
        self.setHeaderLabels(['所有飞行区域'])
        self.itemClicked.connect(self.on_itemclicked)

    def on_itemclicked(self, item, column):
        item.on_click()

    def mousePressEvent(self, event):
        item = self.itemAt(event.pos())#坐标相对于桌面，得到某个位置处单元格的item
        if event.buttons() == PyQt5.QtCore.Qt.RightButton:#右键
            if item:
                menu = item.get_right_click_menu()
                menu.move(event.globalPos())#坐标相对于窗口，在哪右键就在哪出现
                menu.show() 
            else:
                menu = self.get_right_click_menu()
                menu.move(event.globalPos())
                menu.show()
        super(Mission_Widget, self).mousePressEvent(event)
    
    def get_right_click_menu(self):
        menu = PyQt5.QtWidgets.QMenu(self)
        menu_item = menu.addAction('添加飞行区域 - 手动绘制')
        menu_item.triggered.connect(self.show_add_area_dialog)
        menu_item = menu.addAction('添加飞行区域 - 从字符串')
        menu_item.triggered.connect(self.show_add_area_from_text_dialog)
        return menu
    
    def show_add_area_dialog(self):#弹出添加区域的框
        dialog = Add_Area_Dialog(self.rc.main_window, self.rc)
        dialog.move(self.mapToGlobal(self.pos()))
        dialog.move(1120, 580)
        dialog.show()
    
    def show_add_area_from_text_dialog(self):
        dialog = PyQt5.QtWidgets.QMainWindow(self.rc.main_window)
        screenRect = PyQt5.QtWidgets.QApplication.desktop().screenGeometry()
        percentage = 0.5
        dialog.resize(screenRect.width()*percentage, screenRect.height()*percentage)
        dialog.setWindowTitle('从字符串添加飞行区域')

        ok_button = PyQt5.QtWidgets.QPushButton('OK', dialog)
        text_edit = PyQt5.QtWidgets.QTextEdit(dialog)

        ok_func = functools.partial(self.add_area_from_text, dialog, text_edit)
        ok_button.clicked.connect(ok_func)

        layout = PyQt5.QtWidgets.QVBoxLayout(dialog)
        layout.addWidget(text_edit, 1)
        layout.addWidget(ok_button, 2)
        centralwidget = PyQt5.QtWidgets.QWidget(dialog)
        centralwidget.setLayout(layout)
        dialog.setCentralWidget(centralwidget)
        dialog.show()

    def add_area_from_text(self, dialog, text_edit):
        str_ = text_edit.toPlainText()
        print(str_)
        dialog.close()
    
    def add_area(self, area_object):#创建了第一个item
        area_item = Mission_Widget_Item(self, self.rc, 'area','new_area', area_object)
        area_item.setExpanded(True)#下一个节点
        return area_item
